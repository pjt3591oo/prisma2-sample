generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:password@localhost:3306/prisma_test"
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])

  @@index([authorId], map: "Post_authorId_fkey")
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model a {
  id Int @id @default(autoincrement())
}

model b {
  id Int @id @default(autoincrement())
}

model c {
  id Int @id @default(autoincrement())
}

model d {
  id Int @id @default(autoincrement())
}

model e {
  id Int @id @default(autoincrement())
}

model f {
  id Int @id @default(autoincrement())
}

model g {
  id Int @id @default(autoincrement())
}

model h {
  id Int @id @default(autoincrement())
}

model i {
  id Int @id @default(autoincrement())
}

model j {
  id Int @id @default(autoincrement())
}

model k {
  id Int @id @default(autoincrement())
}

model l {
  id Int @id @default(autoincrement())
}

model n {
  id Int @id @default(autoincrement())
}

model m {
  id Int @id @default(autoincrement())
}

model o {
  id Int @id @default(autoincrement())
}

model p {
  id Int @id @default(autoincrement())
}

model q {
  id Int @id @default(autoincrement())
}

model r {
  id Int @id @default(autoincrement())
}

model s {
  id Int @id @default(autoincrement())
}

model t {
  id Int @id @default(autoincrement())
}

model u {
  id Int @id @default(autoincrement())
}

model v {
  id Int @id @default(autoincrement())
}
